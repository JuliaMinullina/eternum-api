import { NestFactory } from '@nestjs/core';
import { AppModule } from '../app.module';
import { getRepositoryToken } from '@nestjs/typeorm';
import { MetaTag } from '../modules/meta-tag/meta-tag.entity';
import { Discipline } from '../modules/discipline/discipline.entity';
import { DisciplineMetaTag } from '../entities/discipline-meta-tag.entity';

const metaTagsData = [
  { MetaTagCode: 'MATH_STATS', MetaTagName: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' },
  { MetaTagCode: 'CS_AI', MetaTagName: '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –Ω–∞—É–∫–∏ –∏ –ò–ò' },
  { MetaTagCode: 'ENGINEERING_TECH', MetaTagName: '–ò–Ω–∂–µ–Ω–µ—Ä–∏—è –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
  { MetaTagCode: 'NATURAL_SCIENCES', MetaTagName: '–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏' },
  { MetaTagCode: 'EARTH_SPACE_ENV', MetaTagName: '–ù–∞—É–∫–∏ –æ –ó–µ–º–ª–µ –∏ –∫–æ—Å–º–æ—Å–µ' },
  { MetaTagCode: 'SOCIAL_SCIENCES', MetaTagName: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—É–∫–∏' },
  { MetaTagCode: 'HUMANITIES', MetaTagName: '–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏' },
  { MetaTagCode: 'LANGUAGES', MetaTagName: '–Ø–∑—ã–∫–∏' },
  { MetaTagCode: 'LITERATURE', MetaTagName: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞' },
  { MetaTagCode: 'ARTS', MetaTagName: '–ò—Å–∫—É—Å—Å—Ç–≤–æ' },
  { MetaTagCode: 'HEALTH_SAFETY_PE', MetaTagName: '–ó–¥–æ—Ä–æ–≤—å–µ, —Ñ–∏–∑–∫—É–ª—å—Ç—É—Ä–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å' }
];

const disciplineToMetaTagData = [
  { DisciplineName: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', MetaTagCode: 'MATH_STATS' },
  { DisciplineName: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –ò–ö–¢', MetaTagCode: 'CS_AI' },
  { DisciplineName: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è', MetaTagCode: 'ENGINEERING_TECH' },
  { DisciplineName: '–§–∏–∑–∏–∫–∞', MetaTagCode: 'NATURAL_SCIENCES' },
  { DisciplineName: '–•–∏–º–∏—è', MetaTagCode: 'NATURAL_SCIENCES' },
  { DisciplineName: '–ë–∏–æ–ª–æ–≥–∏—è', MetaTagCode: 'NATURAL_SCIENCES' },
  { DisciplineName: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', MetaTagCode: 'EARTH_SPACE_ENV' },
  { DisciplineName: '–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è', MetaTagCode: 'EARTH_SPACE_ENV' },
  { DisciplineName: '–≠–∫–æ–ª–æ–≥–∏—è', MetaTagCode: 'EARTH_SPACE_ENV' },
  { DisciplineName: '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', MetaTagCode: 'SOCIAL_SCIENCES' },
  { DisciplineName: '–≠–∫–æ–Ω–æ–º–∏–∫–∞', MetaTagCode: 'SOCIAL_SCIENCES' },
  { DisciplineName: '–ü—Ä–∞–≤–æ', MetaTagCode: 'SOCIAL_SCIENCES' },
  { DisciplineName: '–ò—Å—Ç–æ—Ä–∏—è', MetaTagCode: 'HUMANITIES' },
  { DisciplineName: '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', MetaTagCode: 'LANGUAGES' },
  { DisciplineName: '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ ‚Äî –ê–Ω–≥–ª–∏–π—Å–∫–∏–π', MetaTagCode: 'LANGUAGES' },
  { DisciplineName: '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ ‚Äî –ù–µ–º–µ—Ü–∫–∏–π', MetaTagCode: 'LANGUAGES' },
  { DisciplineName: '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ ‚Äî –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π', MetaTagCode: 'LANGUAGES' },
  { DisciplineName: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', MetaTagCode: 'LITERATURE' },
  { DisciplineName: '–ò–∑–æ–±—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ', MetaTagCode: 'ARTS' },
  { DisciplineName: '–ú—É–∑—ã–∫–∞', MetaTagCode: 'ARTS' },
  { DisciplineName: '–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞', MetaTagCode: 'HEALTH_SAFETY_PE' },
  { DisciplineName: '–û—Å–Ω–æ–≤—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–µ–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', MetaTagCode: 'HEALTH_SAFETY_PE' }
];

async function bootstrap() {
  const app = await NestFactory.createApplicationContext(AppModule);
  
  try {
    const metaTagRepository = app.get(getRepositoryToken(MetaTag));
    const disciplineRepository = app.get(getRepositoryToken(Discipline));
    const disciplineMetaTagRepository = app.get(getRepositoryToken(DisciplineMetaTag));
    
    console.log('üå± –ù–∞—á–∏–Ω–∞—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –º–µ—Ç–∞-—Ç–µ–≥–∏
    const existingMetaTags = await metaTagRepository.find();
    if (existingMetaTags.length > 0) {
      console.log('‚ö†Ô∏è  –ú–µ—Ç–∞-—Ç–µ–≥–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ...');
    } else {
      // –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
      const createdMetaTags = await metaTagRepository.save(metaTagsData);
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ ${createdMetaTags.length} –º–µ—Ç–∞-—Ç–µ–≥–æ–≤:`);
      createdMetaTags.forEach((metaTag, index) => {
        console.log(`   ${index + 1}. ${metaTag.MetaTagName} (${metaTag.MetaTagCode})`);
      });
    }
    
    console.log('\nüîó –°–æ–∑–¥–∞—é —Å–≤—è–∑–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω —Å –º–µ—Ç–∞-—Ç–µ–≥–∞–º–∏...');
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤—è–∑–∏
    await disciplineMetaTagRepository.clear();
    
    // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω —Å –º–µ—Ç–∞-—Ç–µ–≥–∞–º–∏
    const createdLinks: DisciplineMetaTag[] = [];
    for (const linkData of disciplineToMetaTagData) {
      const discipline = await disciplineRepository.findOne({
        where: { DisciplineName: linkData.DisciplineName }
      });
      
      if (discipline) {
        const disciplineMetaTag = disciplineMetaTagRepository.create({
          DisciplineID: discipline.DisciplineID,
          MetaTagCode: linkData.MetaTagCode
        });
        const savedLink = await disciplineMetaTagRepository.save(disciplineMetaTag);
        createdLinks.push(savedLink);
        console.log(`   ‚úÖ ${linkData.DisciplineName} ‚Üí ${linkData.MetaTagCode}`);
      } else {
        console.log(`   ‚ö†Ô∏è  –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ "${linkData.DisciplineName}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
    }
    
    console.log(`\nüéâ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ ${createdLinks.length} —Å–≤—è–∑–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω —Å –º–µ—Ç–∞-—Ç–µ–≥–∞–º–∏!`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤:', error);
    throw error;
  } finally {
    await app.close();
    process.exit(0);
  }
}

bootstrap();
