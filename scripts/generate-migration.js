#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—É—â–Ω–æ—Å—Ç—è—Ö
const entitiesPath = path.join(__dirname, '../src/modules');
const migrationsPath = path.join(__dirname, '../src/migrations');

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö entity —Ñ–∞–π–ª–æ–≤
const getEntityFiles = (dir) => {
  const files = [];
  const items = fs.readdirSync(dir, { withFileTypes: true });
  
  for (const item of items) {
    const fullPath = path.join(dir, item.name);
    if (item.isDirectory()) {
      files.push(...getEntityFiles(fullPath));
    } else if (item.name.endsWith('.entity.ts')) {
      files.push(fullPath);
    }
  }
  
  return files;
};

const entityFiles = getEntityFiles(entitiesPath);
console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${entityFiles.length} entity —Ñ–∞–π–ª–æ–≤:`);
entityFiles.forEach(file => {
  console.log(`  - ${path.relative(process.cwd(), file)}`);
});

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
const timestamp = Date.now();
const migrationName = `Migration${timestamp}`;

console.log(`\nüîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: ${migrationName}`);

try {
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
  execSync(`npm run migration:generate src/migrations/${migrationName}`, {
    stdio: 'inherit',
    cwd: process.cwd()
  });
  
  console.log(`\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è ${migrationName} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!`);
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é –≤ src/migrations/');
  console.log('2. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ SQL –∑–∞–ø—Ä–æ—Å—ã');
  console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –ª–æ–∫–∞–ª—å–Ω–æ: npm run migration:run');
  console.log('4. –ó–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –≤ git');
  console.log('5. –ü—Ä–∏ –¥–µ–ø–ª–æ–µ –º–∏–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
  
} catch (error) {
  console.error('\n‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
  console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
  console.log('- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
  console.log('- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î');
  console.log('- –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ö–µ–º–∞—Ö');
  
  process.exit(1);
}
