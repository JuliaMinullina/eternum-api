const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

async function testDisciplinesAPI() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–∏—Å—Ü–∏–ø–ª–∏–Ω...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
    console.log('1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω:');
    const response = await axios.get(`${BASE_URL}/disciplines`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status}`);
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω: ${response.data.length}`);
    console.log('   –ü–µ—Ä–≤—ã–µ 3 –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:');
    response.data.slice(0, 3).forEach(discipline => {
      console.log(`     - ${discipline.DisciplineName} (${discipline.DisciplineID})`);
    });
    console.log('');

    // 2. –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É
    if (response.data.length > 0) {
      const firstDiscipline = response.data[0];
      console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:');
      const singleResponse = await axios.get(`${BASE_URL}/disciplines/${firstDiscipline.DisciplineID}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${singleResponse.status}`);
      console.log(`   –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: ${singleResponse.data.DisciplineName}`);
      console.log(`   ID: ${singleResponse.data.DisciplineID}`);
      console.log('');

      // 3. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É
      console.log('3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:');
      const newDiscipline = {
        DisciplineName: '–¢–µ—Å—Ç–æ–≤–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞'
      };
      const createResponse = await axios.post(`${BASE_URL}/disciplines`, newDiscipline);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${createResponse.status}`);
      console.log(`   –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: ${createResponse.data.DisciplineName}`);
      console.log(`   ID: ${createResponse.data.DisciplineID}`);
      console.log('');

      // 4. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É
      console.log('4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:');
      const updateData = {
        DisciplineName: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞'
      };
      const updateResponse = await axios.put(`${BASE_URL}/disciplines/${createResponse.data.DisciplineID}`, updateData);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${updateResponse.status}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: ${updateResponse.data.DisciplineName}`);
      console.log('');

      // 5. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É
      console.log('5. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã:');
      const deleteResponse = await axios.delete(`${BASE_URL}/disciplines/${createResponse.data.DisciplineID}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${deleteResponse.status}`);
      console.log('   –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∞');
      console.log('');
    }

    console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    if (error.response) {
      console.error('   –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('   –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testDisciplinesAPI();
