#!/usr/bin/env node

const { Client } = require('pg');

console.log('üóëÔ∏è –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

async function resetDatabase() {
  const client = new Client({
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    user: process.env.DB_USERNAME || 'postgres',
    password: process.env.DB_PASSWORD || 'password',
    database: process.env.DB_NAME || 'nestjs_db',
  });

  try {
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    await client.query('DROP SCHEMA public CASCADE');
    console.log('‚úÖ –°—Ö–µ–º–∞ public —É–¥–∞–ª–µ–Ω–∞');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ö–µ–º—É
    await client.query('CREATE SCHEMA public');
    console.log('‚úÖ –ù–æ–≤–∞—è —Å—Ö–µ–º–∞ public —Å–æ–∑–¥–∞–Ω–∞');

    // –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞
    await client.query('GRANT ALL ON SCHEMA public TO postgres');
    await client.query('GRANT ALL ON SCHEMA public TO public');
    console.log('‚úÖ –ü—Ä–∞–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã');

    console.log('\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞!');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: npm run migration:run');
    console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏–¥—ã: npm run seed:disciplines');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  } finally {
    await client.end();
  }
}

resetDatabase();
