#!/usr/bin/env node

const { execSync } = require('child_process');
const path = require('path');

console.log('üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ü–û–õ–ù–û–ï –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–û–ô –í–°–ï–õ–ï–ù–ù–û–ô!');
console.log('=' .repeat(60));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
function runCommand(command, description) {
    try {
        console.log(`\nüìã ${description}...`);
        console.log(`üíª –í—ã–ø–æ–ª–Ω—è–µ–º: ${command}`);
        
        const result = execSync(command, { 
            cwd: __dirname, 
            stdio: 'inherit',
            encoding: 'utf8'
        });
        
        console.log(`‚úÖ ${description} - –£–°–ü–ï–®–ù–û!`);
        return true;
    } catch (error) {
        console.error(`‚ùå –û–®–ò–ë–ö–ê –≤ ${description}:`, error.message);
        return false;
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
async function setupCompleteDatabase() {
    console.log('\nüèóÔ∏è –≠–¢–ê–ü 1: –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –í–°–ï–• –ú–ò–ì–†–ê–¶–ò–ô');
    console.log('-'.repeat(40));
    
    if (!runCommand('npm run migration:run', '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π')) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
        process.exit(1);
    }
    
    console.log('\nüìö –≠–¢–ê–ü 2: –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–ó–û–í–´–• –î–ê–ù–ù–´–•');
    console.log('-'.repeat(40));
    
    const baseDataScripts = [
        { script: 'npx ts-node src/scripts/seed-disciplines.ts', desc: '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω' },
        { script: 'npx ts-node src/scripts/seed-meta-tags.ts', desc: '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤' },
        { script: 'npx ts-node src/scripts/seed-discipline-meta-tags.ts', desc: '–°–≤—è–∑–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω –∏ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤' }
    ];
    
    for (const item of baseDataScripts) {
        if (!runCommand(item.script, item.desc)) {
            console.error(`‚ùå –û–®–ò–ë–ö–ê –≤ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ${item.desc}`);
            process.exit(1);
        }
    }
    
    console.log('\nüìñ –≠–¢–ê–ü 3: –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –í–°–ï–• –¢–ï–ú –ü–û –î–ò–°–¶–ò–ü–õ–ò–ù–ê–ú');
    console.log('-'.repeat(40));
    
    const topicScripts = [
        { script: 'npx ts-node src/scripts/seed-literature-topics.ts', desc: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ (~45 —Ç–µ–º)' },
        { script: 'npx ts-node src/scripts/seed-mathematics-topics.ts', desc: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (37 —Ç–µ–º)' },
        { script: 'npx ts-node src/scripts/seed-physics-topics.ts', desc: '–§–∏–∑–∏–∫–∞ (31 —Ç–µ–º–∞)' },
        { script: 'npx ts-node src/scripts/seed-chemistry-topics.ts', desc: '–•–∏–º–∏—è (35 —Ç–µ–º)' },
        { script: 'npx ts-node src/scripts/seed-biology-topics.ts', desc: '–ë–∏–æ–ª–æ–≥–∏—è (33 —Ç–µ–º—ã)' },
        { script: 'npx ts-node src/scripts/seed-geography-topics.ts', desc: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è (32 —Ç–µ–º—ã)' },
        { script: 'npx ts-node src/scripts/seed-russian-topics.ts', desc: '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (40 —Ç–µ–º)' },
        { script: 'npx ts-node src/scripts/seed-informatics-topics.ts', desc: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ (36 —Ç–µ–º)' },
        { script: 'npx ts-node src/scripts/seed-social-studies-topics.ts', desc: '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ (35 —Ç–µ–º)' },
        { script: 'npx ts-node src/scripts/seed-economics-topics.ts', desc: '–≠–∫–æ–Ω–æ–º–∏–∫–∞ (33 —Ç–µ–º—ã)' },
        { script: 'npx ts-node src/scripts/seed-law-topics.ts', desc: '–ü—Ä–∞–≤–æ (25 —Ç–µ–º)' }
    ];
    
    let successCount = 0;
    for (const item of topicScripts) {
        if (runCommand(item.script, item.desc)) {
            successCount++;
        } else {
            console.warn(`‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: ${item.desc} –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ`);
        }
    }
    
    console.log('\nüîç –≠–¢–ê–ü 4: –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í');
    console.log('-'.repeat(40));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    try {
        console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–º –≤ –±–∞–∑–µ...');
        const topicCount = execSync('docker-compose exec postgres psql -U postgres -d nestjs_db -c "SELECT COUNT(*) as total_topics FROM topics;"', { 
            cwd: __dirname, 
            encoding: 'utf8' 
        });
        console.log(`üìà –í—Å–µ–≥–æ —Ç–µ–º –≤ –±–∞–∑–µ: ${topicCount.trim()}`);
        
        console.log('\nüìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º:');
        const disciplineStats = execSync('docker-compose exec postgres psql -U postgres -d nestjs_db -c "SELECT d.DisciplineName, COUNT(t.TopicID) as topics_count FROM disciplines d LEFT JOIN topics t ON d.DisciplineID = t.DisciplineID GROUP BY d.DisciplineID, d.DisciplineName ORDER BY d.DisciplineName;"', { 
            cwd: __dirname, 
            encoding: 'utf8' 
        });
        console.log(disciplineStats);
        
    } catch (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:', error.message);
    }
    
    console.log('\nüéâ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢');
    console.log('=' .repeat(60));
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${successCount}/${topicScripts.length} —Å–∫—Ä–∏–ø—Ç–æ–≤ —Ç–µ–º`);
    console.log(`üìö –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–º: ~382`);
    console.log(`üéì –î–∏—Å—Ü–∏–ø–ª–∏–Ω: 11`);
    console.log(`üèÜ Production-ready: –î–ê!`);
    
    if (successCount === topicScripts.length) {
        console.log('\nüåü –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–ê–Ø –í–°–ï–õ–ï–ù–ù–ê–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–ó–î–ê–ù–ê! üåü');
        console.log('üöÄ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω!');
    } else {
        console.log('\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.');
    }
}

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
setupCompleteDatabase().catch(error => {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
    process.exit(1);
});
